package com.shadows.liquiblq.data.entitys;

// default package
// Generated 09-Oct-2015 13:21:36 by Hibernate Tools 4.3.1

import java.io.Serializable;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import java.util.UUID;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Artist generated by hbm2java
 */
@Entity
@Table(name = "artist")
public class Artist implements java.io.Serializable {

	private UUID id;
	private String name;
	private String nickname;
	private Date dateofbirth;
	private Set<ArtistsInAlbums> artistsInAlbumses = new HashSet<ArtistsInAlbums>(
			0);

	public Artist() {
	}

	public Artist(UUID id, String name, String nickname,
			Date dateofbirth) {
		this.id = id;
		this.name = name;
		this.nickname = nickname;
		this.dateofbirth = dateofbirth;
	}

	public Artist(UUID id, String name, String nickname,
			Date dateofbirth, Set<ArtistsInAlbums> artistsInAlbumses) {
		this.id = id;
		this.name = name;
		this.nickname = nickname;
		this.dateofbirth = dateofbirth;
		this.artistsInAlbumses = artistsInAlbumses;
	}

	@Id
	@Column(name = "id", unique = true, nullable = false)
	public UUID getId() {
		return this.id;
	}

	public void setId(UUID id) {
		this.id = id;
	}

	@Column(name = "name", nullable = false, length = 55)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "nickname", nullable = false, length = 55)
	public String getNickname() {
		return this.nickname;
	}

	public void setNickname(String nickname) {
		this.nickname = nickname;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "dateofbirth", nullable = false, length = 29)
	public Date getDateofbirth() {
		return this.dateofbirth;
	}

	public void setDateofbirth(Date dateofbirth) {
		this.dateofbirth = dateofbirth;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "artist")
	public Set<ArtistsInAlbums> getArtistsInAlbumses() {
		return this.artistsInAlbumses;
	}

	public void setArtistsInAlbumses(Set<ArtistsInAlbums> artistsInAlbumses) {
		this.artistsInAlbumses = artistsInAlbumses;
	}

}
