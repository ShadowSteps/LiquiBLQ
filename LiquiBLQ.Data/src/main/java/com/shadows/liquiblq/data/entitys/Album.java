package com.shadows.liquiblq.data.entitys;

// default package
// Generated 09-Oct-2015 13:21:36 by Hibernate Tools 4.3.1

import java.io.Serializable;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import java.util.UUID;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Album generated by hbm2java
 */
@Entity
@Table(name = "album")
public class Album implements java.io.Serializable {

	private UUID id;
	private Date date;
	private String name;
	private Set<ArtistsInAlbums> artistsInAlbumses = new HashSet<ArtistsInAlbums>(
			0);
	private Set<SongsInAlbum> songsInAlbums = new HashSet<SongsInAlbum>(0);

	public Album() {
	}

	public Album(UUID id, Date date, String name) {
		this.id = id;
		this.date = date;
		this.name = name;
	}

	public Album(UUID id, Date date, String name,
			Set<ArtistsInAlbums> artistsInAlbumses,
			Set<SongsInAlbum> songsInAlbums) {
		this.id = id;
		this.date = date;
		this.name = name;
		this.artistsInAlbumses = artistsInAlbumses;
		this.songsInAlbums = songsInAlbums;
	}

	@Id
	@Column(name = "id", unique = true, nullable = false, columnDefinition = "uuid")
	public UUID getId() {
		return this.id;
	}

	public void setId(UUID id) {
		this.id = id;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "date", nullable = false, length = 29)
	public Date getDate() {
		return this.date;
	}

	public void setDate(Date date) {
		this.date = date;
	}

	@Column(name = "name", nullable = false, length = 55)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "album")
	public Set<ArtistsInAlbums> getArtistsInAlbumses() {
		return this.artistsInAlbumses;
	}

	public void setArtistsInAlbumses(Set<ArtistsInAlbums> artistsInAlbumses) {
		this.artistsInAlbumses = artistsInAlbumses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "album")
	public Set<SongsInAlbum> getSongsInAlbums() {
		return this.songsInAlbums;
	}

	public void setSongsInAlbums(Set<SongsInAlbum> songsInAlbums) {
		this.songsInAlbums = songsInAlbums;
	}

}
